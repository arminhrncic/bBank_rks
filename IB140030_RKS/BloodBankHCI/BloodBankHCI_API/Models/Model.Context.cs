//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BloodBankHCI_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BankaKrviHCIEntities : DbContext
    {
        public BankaKrviHCIEntities()
            : base("name=BankaKrviHCIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CentriKorisnici> CentriKorisnici { get; set; }
        public virtual DbSet<Donacije> Donacije { get; set; }
        public virtual DbSet<Donatori> Donatori { get; set; }
        public virtual DbSet<Drzave> Drzave { get; set; }
        public virtual DbSet<Gradovi> Gradovi { get; set; }
        public virtual DbSet<Institucije> Institucije { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<KorisnickeUloge> KorisnickeUloge { get; set; }
        public virtual DbSet<Obavjestenja> Obavjestenja { get; set; }
        public virtual DbSet<Stanja> Stanja { get; set; }
        public virtual DbSet<StatusZahtjeva> StatusZahtjeva { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TransfuzijskiCentri> TransfuzijskiCentri { get; set; }
        public virtual DbSet<Uloge> Uloge { get; set; }
        public virtual DbSet<ZahtjevZaKrv> ZahtjevZaKrv { get; set; }
    
        public virtual ObjectResult<bsp_Donacije_GetByDonatorIdHCI_Result> bsp_Donacije_GetByDonatorIdHCI(Nullable<int> donatorId)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Donacije_GetByDonatorIdHCI_Result>("bsp_Donacije_GetByDonatorIdHCI", donatorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> bsp_Donacije_InsertHCI(Nullable<int> transfuzijskiCentarId, Nullable<int> donatorId, Nullable<System.DateTime> datumDonacije, Nullable<int> brojDoza, Nullable<int> kolicina, Nullable<bool> uspjesnoRealizovana, Nullable<bool> odbijena)
        {
            var transfuzijskiCentarIdParameter = transfuzijskiCentarId.HasValue ?
                new ObjectParameter("TransfuzijskiCentarId", transfuzijskiCentarId) :
                new ObjectParameter("TransfuzijskiCentarId", typeof(int));
    
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            var datumDonacijeParameter = datumDonacije.HasValue ?
                new ObjectParameter("DatumDonacije", datumDonacije) :
                new ObjectParameter("DatumDonacije", typeof(System.DateTime));
    
            var brojDozaParameter = brojDoza.HasValue ?
                new ObjectParameter("BrojDoza", brojDoza) :
                new ObjectParameter("BrojDoza", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            var uspjesnoRealizovanaParameter = uspjesnoRealizovana.HasValue ?
                new ObjectParameter("UspjesnoRealizovana", uspjesnoRealizovana) :
                new ObjectParameter("UspjesnoRealizovana", typeof(bool));
    
            var odbijenaParameter = odbijena.HasValue ?
                new ObjectParameter("Odbijena", odbijena) :
                new ObjectParameter("Odbijena", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("bsp_Donacije_InsertHCI", transfuzijskiCentarIdParameter, donatorIdParameter, datumDonacijeParameter, brojDozaParameter, kolicinaParameter, uspjesnoRealizovanaParameter, odbijenaParameter);
        }
    
        public virtual ObjectResult<bsp_Donatori_GetByEmailHCI_Result> bsp_Donatori_GetByEmailHCI(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Donatori_GetByEmailHCI_Result>("bsp_Donatori_GetByEmailHCI", emailParameter);
        }
    
        public virtual ObjectResult<bsp_Donatori_GetByIdHCI_Result> bsp_Donatori_GetByIdHCI(Nullable<int> donatorId)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Donatori_GetByIdHCI_Result>("bsp_Donatori_GetByIdHCI", donatorIdParameter);
        }
    
        public virtual ObjectResult<bsp_Donatori_GetByKrvnaGrupaIndexHCI_Result> bsp_Donatori_GetByKrvnaGrupaIndexHCI(Nullable<int> kgIndex)
        {
            var kgIndexParameter = kgIndex.HasValue ?
                new ObjectParameter("kgIndex", kgIndex) :
                new ObjectParameter("kgIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Donatori_GetByKrvnaGrupaIndexHCI_Result>("bsp_Donatori_GetByKrvnaGrupaIndexHCI", kgIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> bsp_Donatori_InsertHCI(string ime, string prezime, string adresa, string email, Nullable<System.DateTime> datumRodjenja, string telefon, string spol, string lozinka, Nullable<bool> aktivan, Nullable<int> gradId, string krvnaGrupa, Nullable<System.DateTime> datumRegistracije)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var datumRodjenjaParameter = datumRodjenja.HasValue ?
                new ObjectParameter("DatumRodjenja", datumRodjenja) :
                new ObjectParameter("DatumRodjenja", typeof(System.DateTime));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var spolParameter = spol != null ?
                new ObjectParameter("Spol", spol) :
                new ObjectParameter("Spol", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            var aktivanParameter = aktivan.HasValue ?
                new ObjectParameter("Aktivan", aktivan) :
                new ObjectParameter("Aktivan", typeof(bool));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var krvnaGrupaParameter = krvnaGrupa != null ?
                new ObjectParameter("KrvnaGrupa", krvnaGrupa) :
                new ObjectParameter("KrvnaGrupa", typeof(string));
    
            var datumRegistracijeParameter = datumRegistracije.HasValue ?
                new ObjectParameter("DatumRegistracije", datumRegistracije) :
                new ObjectParameter("DatumRegistracije", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("bsp_Donatori_InsertHCI", imeParameter, prezimeParameter, adresaParameter, emailParameter, datumRodjenjaParameter, telefonParameter, spolParameter, lozinkaParameter, aktivanParameter, gradIdParameter, krvnaGrupaParameter, datumRegistracijeParameter);
        }
    
        public virtual int bsp_Donatori_UpdateDatumZadnjeDonacijeHCI(Nullable<int> donatorId, Nullable<System.DateTime> datum)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("datum", datum) :
                new ObjectParameter("datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bsp_Donatori_UpdateDatumZadnjeDonacijeHCI", donatorIdParameter, datumParameter);
        }
    
        public virtual int bsp_Donatori_UpdateHCI(Nullable<int> donatorId, string ime, string prezime, string adresa, string email, Nullable<System.DateTime> datumRodjenja, string telefon, string spol, string krvnaGrupa, string lozinka, Nullable<int> gradId, Nullable<bool> aktivan)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var datumRodjenjaParameter = datumRodjenja.HasValue ?
                new ObjectParameter("DatumRodjenja", datumRodjenja) :
                new ObjectParameter("DatumRodjenja", typeof(System.DateTime));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var spolParameter = spol != null ?
                new ObjectParameter("Spol", spol) :
                new ObjectParameter("Spol", typeof(string));
    
            var krvnaGrupaParameter = krvnaGrupa != null ?
                new ObjectParameter("KrvnaGrupa", krvnaGrupa) :
                new ObjectParameter("KrvnaGrupa", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var aktivanParameter = aktivan.HasValue ?
                new ObjectParameter("Aktivan", aktivan) :
                new ObjectParameter("Aktivan", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bsp_Donatori_UpdateHCI", donatorIdParameter, imeParameter, prezimeParameter, adresaParameter, emailParameter, datumRodjenjaParameter, telefonParameter, spolParameter, krvnaGrupaParameter, lozinkaParameter, gradIdParameter, aktivanParameter);
        }
    
        public virtual int bsp_Donatori_UpdateSlikeHCI(Nullable<int> donatorId, string slika)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bsp_Donatori_UpdateSlikeHCI", donatorIdParameter, slikaParameter);
        }
    
        public virtual ObjectResult<bsp_Gradovi_SelectAll_Result> bsp_Gradovi_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Gradovi_SelectAll_Result>("bsp_Gradovi_SelectAll");
        }
    
        public virtual ObjectResult<bsp_Stanja_SelectByCentarId_Result> bsp_Stanja_SelectByCentarId(Nullable<int> transfuzijskiCentarId)
        {
            var transfuzijskiCentarIdParameter = transfuzijskiCentarId.HasValue ?
                new ObjectParameter("TransfuzijskiCentarId", transfuzijskiCentarId) :
                new ObjectParameter("TransfuzijskiCentarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Stanja_SelectByCentarId_Result>("bsp_Stanja_SelectByCentarId", transfuzijskiCentarIdParameter);
        }
    
        public virtual ObjectResult<bsp_TransfuzijskiCentri_SelectAll_Result> bsp_TransfuzijskiCentri_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_TransfuzijskiCentri_SelectAll_Result>("bsp_TransfuzijskiCentri_SelectAll");
        }
    
        public virtual ObjectResult<bsp_Zahtjevi_GetByDonatorId_Result> bsp_Zahtjevi_GetByDonatorId(Nullable<int> donatorId)
        {
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bsp_Zahtjevi_GetByDonatorId_Result>("bsp_Zahtjevi_GetByDonatorId", donatorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> bsp_Zahtjevi_InsertHCI(Nullable<int> transfuzijskiCentarId, Nullable<int> donatorId, string nazivKrvneGrupe, Nullable<int> brojDoza, Nullable<System.DateTime> datumZahtjeva, Nullable<int> statusZahtjeva, Nullable<int> kolicina)
        {
            var transfuzijskiCentarIdParameter = transfuzijskiCentarId.HasValue ?
                new ObjectParameter("TransfuzijskiCentarId", transfuzijskiCentarId) :
                new ObjectParameter("TransfuzijskiCentarId", typeof(int));
    
            var donatorIdParameter = donatorId.HasValue ?
                new ObjectParameter("DonatorId", donatorId) :
                new ObjectParameter("DonatorId", typeof(int));
    
            var nazivKrvneGrupeParameter = nazivKrvneGrupe != null ?
                new ObjectParameter("NazivKrvneGrupe", nazivKrvneGrupe) :
                new ObjectParameter("NazivKrvneGrupe", typeof(string));
    
            var brojDozaParameter = brojDoza.HasValue ?
                new ObjectParameter("BrojDoza", brojDoza) :
                new ObjectParameter("BrojDoza", typeof(int));
    
            var datumZahtjevaParameter = datumZahtjeva.HasValue ?
                new ObjectParameter("DatumZahtjeva", datumZahtjeva) :
                new ObjectParameter("DatumZahtjeva", typeof(System.DateTime));
    
            var statusZahtjevaParameter = statusZahtjeva.HasValue ?
                new ObjectParameter("StatusZahtjeva", statusZahtjeva) :
                new ObjectParameter("StatusZahtjeva", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("bsp_Zahtjevi_InsertHCI", transfuzijskiCentarIdParameter, donatorIdParameter, nazivKrvneGrupeParameter, brojDozaParameter, datumZahtjevaParameter, statusZahtjevaParameter, kolicinaParameter);
        }
    }
}
